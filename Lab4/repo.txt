ExecutionStack: 	(int v;(v=(2);print(v)))

SymbolTable: 
Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	int v
	(v=(2);print(v))

SymbolTable: 
Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	(v=(2);print(v))

SymbolTable: 	v -> (0)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	v=(2)
	print(v)

SymbolTable: 	v -> (0)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	print(v)

SymbolTable: 	v -> (2)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 
SymbolTable: 	v -> (2)

Output: [(2)]
FileTable: -----------------------------------------------------------
ExecutionStack: 	(int v;(v=(2);print(v)))

SymbolTable: 
Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	int v
	(v=(2);print(v))

SymbolTable: 
Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	(v=(2);print(v))

SymbolTable: 	v -> (0)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	v=(2)
	print(v)

SymbolTable: 	v -> (0)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	print(v)

SymbolTable: 	v -> (2)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 
SymbolTable: 	v -> (2)

Output: [(2)]
FileTable: -----------------------------------------------------------
ExecutionStack: 	(int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))

SymbolTable: 
Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	int a
	(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))

SymbolTable: 
Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))

SymbolTable: 	a -> (0)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	int b
	(a=(2)+(3)*(5);(b=a+(1);print(b)))

SymbolTable: 	a -> (0)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	(a=(2)+(3)*(5);(b=a+(1);print(b)))

SymbolTable: 	a -> (0)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	a=(2)+(3)*(5)
	(b=a+(1);print(b))

SymbolTable: 	a -> (0)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	(b=a+(1);print(b))

SymbolTable: 	a -> (17)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	b=a+(1)
	print(b)

SymbolTable: 	a -> (17)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	print(b)

SymbolTable: 	a -> (17)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 
SymbolTable: 	a -> (17)

Output: [(18)]
FileTable: -----------------------------------------------------------
ExecutionStack: 	(bool a;(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))))

SymbolTable: 
Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	bool a
	(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))

SymbolTable: 
Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))

SymbolTable: 	a -> (false)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	int v
	(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))

SymbolTable: 	a -> (false)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))

SymbolTable: 	v -> (0)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	a=(true)
	( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))

SymbolTable: 	v -> (0)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))

SymbolTable: 	v -> (0)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	 IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) 
	print(v)

SymbolTable: 	v -> (0)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	v=(2)
	print(v)

SymbolTable: 	v -> (0)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	print(v)

SymbolTable: 	v -> (2)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 
SymbolTable: 	v -> (2)

Output: [(2)]
FileTable: -----------------------------------------------------------
ExecutionStack: 
SymbolTable: 	v -> (2)

Output: [(2)]
FileTable: -----------------------------------------------------------
ExecutionStack: 	(string s;(s=(ana);print(s)))

SymbolTable: 
Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	string s
	(s=(ana);print(s))

SymbolTable: 
Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	(s=(ana);print(s))

SymbolTable: 	s -> ("")

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	s=(ana)
	print(s)

SymbolTable: 	s -> ("")

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	print(s)

SymbolTable: 	s -> (ana)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 
SymbolTable: 	s -> (ana)

Output: [(ana)]
FileTable: -----------------------------------------------------------
ExecutionStack: 	(string varf;(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))))

SymbolTable: 
Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	string varf
	(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))

SymbolTable: 
Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))

SymbolTable: 	varf -> ("")

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	varf=(test.in)
	(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))

SymbolTable: 	varf -> ("")

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))

SymbolTable: 	varf -> (test.in)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	openRFile(varf)
	(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))

SymbolTable: 	varf -> (test.in)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	 IF ( (40)==(30) )  THEN ( print((ana)) ) ELSE ( print((ion)) ) 

SymbolTable: 
Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	print((ion))

SymbolTable: 
Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 
SymbolTable: 
Output: [(ion)]
FileTable: -----------------------------------------------------------
ExecutionStack: 	(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))

SymbolTable: 	varf -> (test.in)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	int varc
	(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))

SymbolTable: 	varf -> (test.in)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))

SymbolTable: 	varf -> (test.in)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	readFile(varf)
	(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))

SymbolTable: 	varf -> (test.in)

Output: []
FileTable: -----------------------------------------------------------
ExecutionStack: 	 IF ( (40)==(30) )  THEN ( print((ana)) ) ELSE ( print((ion)) ) 

SymbolTable: 
Output: []
FileTable: ---
ExecutionStack: 	print((ion))

SymbolTable: 
Output: []
FileTable: ---
ExecutionStack: 
SymbolTable: 
Output: [(ion)]
FileTable: ---
ExecutionStack: 	(string varf;(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))))

SymbolTable: 
Output: []
FileTable: ---
ExecutionStack: 	string varf
	(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))

SymbolTable: 
Output: []
FileTable: ---
ExecutionStack: 	(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))

SymbolTable: 	varf -> ("")

Output: []
FileTable: ---
ExecutionStack: 	varf=(test.in)
	(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))

SymbolTable: 	varf -> ("")

Output: []
FileTable: ---
ExecutionStack: 	(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))

SymbolTable: 	varf -> (test.in)

Output: []
FileTable: ---
ExecutionStack: 	openRFile(varf)
	(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))

SymbolTable: 	varf -> (test.in)

Output: []
FileTable: ---
ExecutionStack: 	(int v;(v=(2);print(v)))

SymbolTable: 
Output: []
FileTable: ---
ExecutionStack: 	int v
	(v=(2);print(v))

SymbolTable: 
Output: []
FileTable: ---
ExecutionStack: 	(v=(2);print(v))

SymbolTable: 	v -> (0)

Output: []
FileTable: ---
ExecutionStack: 	v=(2)
	print(v)

SymbolTable: 	v -> (0)

Output: []
FileTable: ---
ExecutionStack: 	print(v)

SymbolTable: 	v -> (2)

Output: []
FileTable: ---
ExecutionStack: 
SymbolTable: 	v -> (2)

Output: [(2)]
FileTable: ---

ExecutionStack: (int v;(v=(2);print(v)))

SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: int v
(v=(2);print(v))

SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (v=(2);print(v))

SymbolTable: 	v -> (0)

Output: []
FileTable: ---

ExecutionStack: v=(2)
print(v)

SymbolTable: 	v -> (0)

Output: []
FileTable: ---

ExecutionStack: print(v)

SymbolTable: 	v -> (2)

Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: 	v -> (2)

Output: [(2)]
FileTable: ---

ExecutionStack: (int v;(v=(2);print(v)))

SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: int v
(v=(2);print(v))

SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (v=(2);print(v))

SymbolTable: 	v -> (0)

Output: []
FileTable: ---

ExecutionStack: v=(2)
print(v)

SymbolTable: 	v -> (0)

Output: []
FileTable: ---

ExecutionStack: print(v)

SymbolTable: 	v -> (2)

Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: 	v -> (2)

Output: [(2)]
FileTable: ---

ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: int vint v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)
Output: []
FileTable: ---

ExecutionStack: v=(2)v=(2)print(v)
SymbolTable: v -> (0)
Output: []
FileTable: ---

ExecutionStack: print(v)
SymbolTable: v -> (2)
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: v -> (2)
Output: [(2)]
FileTable: ---

ExecutionStack: 
SymbolTable: v -> (2)
Output: [(2)]
FileTable: ---

ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: int aint a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)
Output: []
FileTable: ---

ExecutionStack: int bint b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)
Output: []
FileTable: ---

ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)a -> (0)
Output: []
FileTable: ---

ExecutionStack: a=(2)+(3)*(5)a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)a -> (0)
Output: []
FileTable: ---

ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)a -> (17)
Output: []
FileTable: ---

ExecutionStack: b=a+(1)b=a+(1)print(b)
SymbolTable: b -> (0)a -> (17)
Output: []
FileTable: ---

ExecutionStack: print(b)
SymbolTable: b -> (18)a -> (17)
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: b -> (18)a -> (17)
Output: [(18)]
FileTable: ---

ExecutionStack: (int   a;(int   b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: int   aint   a(int   b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (int   b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)
Output: []
FileTable: ---

ExecutionStack: int   bint   b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)
Output: []
FileTable: ---

ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)a -> (0)
Output: []
FileTable: ---

ExecutionStack: a=(2)+(3)*(5)a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)a -> (0)
Output: []
FileTable: ---

ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)a -> (17)
Output: []
FileTable: ---

ExecutionStack: b=a+(1)b=a+(1)print(b)
SymbolTable: b -> (0)a -> (17)
Output: []
FileTable: ---

ExecutionStack: print(b)
SymbolTable: b -> (18)a -> (17)
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: b -> (18)a -> (17)
Output: [(18)]
FileTable: ---

ExecutionStack: (int  a;(int  b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: int  aint  a(int  b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (int  b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)
Output: []
FileTable: ---

ExecutionStack: int  bint  b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)
Output: []
FileTable: ---

ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)a -> (0)
Output: []
FileTable: ---

ExecutionStack: a=(2)+(3)*(5)a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)a -> (0)
Output: []
FileTable: ---

ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)a -> (17)
Output: []
FileTable: ---

ExecutionStack: b=a+(1)b=a+(1)print(b)
SymbolTable: b -> (0)a -> (17)
Output: []
FileTable: ---

ExecutionStack: print(b)
SymbolTable: b -> (18)a -> (17)
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: b -> (18)a -> (17)
Output: [(18)]
FileTable: ---

ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: int vint v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)
Output: []
FileTable: ---

ExecutionStack: v=(2)v=(2)print(v)
SymbolTable: v -> (0)
Output: []
FileTable: ---

ExecutionStack: print(v)
SymbolTable: v -> (2)
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: v -> (2)
Output: [(2)]
FileTable: ---

ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: int aint a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)
Output: []
FileTable: ---

ExecutionStack: int bint b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)
Output: []
FileTable: ---

ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)a -> (0)
Output: []
FileTable: ---

ExecutionStack: a=(2)+(3)*(5)a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)a -> (0)
Output: []
FileTable: ---

ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)a -> (17)
Output: []
FileTable: ---

ExecutionStack: b=a+(1)b=a+(1)print(b)
SymbolTable: b -> (0)a -> (17)
Output: []
FileTable: ---

ExecutionStack: print(b)
SymbolTable: b -> (18)a -> (17)
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: b -> (18)a -> (17)
Output: [(18)]
FileTable: ---

ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: int aint a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)
Output: []
FileTable: ---

ExecutionStack: int bint b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)
Output: []
FileTable: ---

ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)a -> (0)
Output: []
FileTable: ---

ExecutionStack: a=(2)+(3)*(5)a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)a -> (0)
Output: []
FileTable: ---

ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)a -> (17)
Output: []
FileTable: ---

ExecutionStack: b=a+(1)b=a+(1)print(b)
SymbolTable: b -> (0)a -> (17)
Output: []
FileTable: ---

ExecutionStack: print(b)
SymbolTable: b -> (18)a -> (17)
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: b -> (18)a -> (17)
Output: [(18)]
FileTable: ---

ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0), 
Output: []
FileTable: ---

ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0), 
Output: []
FileTable: ---

ExecutionStack: print(v)
SymbolTable: v -> (2), 
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: v -> (2), 
Output: [(2)]
FileTable: ---

ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0), 
Output: []
FileTable: ---

ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0), 
Output: []
FileTable: ---

ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0), a -> (0), 
Output: []
FileTable: ---

ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0), a -> (0), 
Output: []
FileTable: ---

ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0), a -> (17), 
Output: []
FileTable: ---

ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0), a -> (17), 
Output: []
FileTable: ---

ExecutionStack: print(b)
SymbolTable: b -> (18), a -> (17), 
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: b -> (18), a -> (17), 
Output: [(18)]
FileTable: ---

ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: ---

ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: ---

ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: ---

ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: ---

ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: ---

ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---

ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---

ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---

ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---

ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: ---

ExecutionStack: (bool a;(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: bool a(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: a -> (false)   
Output: []
FileTable: ---

ExecutionStack: int v(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   
Output: []
FileTable: ---

ExecutionStack: (a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: ---

ExecutionStack: a=(true)( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: ---

ExecutionStack: ( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---

ExecutionStack:  IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---

ExecutionStack: v=(2)print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---

ExecutionStack: print(v)
SymbolTable: a -> (true)   v -> (2)   
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: a -> (true)   v -> (2)   
Output: [(2)]
FileTable: ---

ExecutionStack: (string s;(s=(ana);print(s)))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: string s(s=(ana);print(s))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (s=(ana);print(s))
SymbolTable: s -> ("")   
Output: []
FileTable: ---

ExecutionStack: s=(ana)print(s)
SymbolTable: s -> ("")   
Output: []
FileTable: ---

ExecutionStack: print(s)
SymbolTable: s -> (ana)   
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: s -> (ana)   
Output: [(ana)]
FileTable: ---

ExecutionStack:  IF ( (40)==(30) )  THEN ( print((ana)) ) ELSE ( print((ion)) ) 
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: print((ion))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: 
Output: [(ion)]
FileTable: ---

ExecutionStack: (string varf;(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: string varf(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---

ExecutionStack: varf=(test.in)(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---

ExecutionStack: (openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---

ExecutionStack: openRFile(varf)(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---

ExecutionStack: (string s;(s=(Astazi e duminica);print(s)))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: string s(s=(Astazi e duminica);print(s))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (s=(Astazi e duminica);print(s))
SymbolTable: s -> ("")   
Output: []
FileTable: ---

ExecutionStack: s=(Astazi e duminica)print(s)
SymbolTable: s -> ("")   
Output: []
FileTable: ---

ExecutionStack: print(s)
SymbolTable: s -> (Astazi e duminica)   
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: s -> (Astazi e duminica)   
Output: [(Astazi e duminica)]
FileTable: ---

ExecutionStack: (string varf;(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: string varf(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---

ExecutionStack: varf=(test.in)(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---

ExecutionStack: (openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---

ExecutionStack: openRFile(varf)(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---

ExecutionStack: (string varf;(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: string varf(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---

ExecutionStack: varf=(test.in)(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---

ExecutionStack: (openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---

ExecutionStack: openRFile(varf)(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---

ExecutionStack: (int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: int varc(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: (readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: readFile(varf)(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: (print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: print(varc)(readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: (readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: readFile(varf)(print(varc);closeRfILE(varf))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: (print(varc);closeRfILE(varf))
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: print(varc)closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: (test.in)---

ExecutionStack: 
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: ---

ExecutionStack: (string varf;(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: string varf(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---

ExecutionStack: varf=(test.in)(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---

ExecutionStack: (openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---

ExecutionStack: openRFile(varf)(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---

ExecutionStack: (int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: int varc(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: (readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: readFile(varf)(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: (print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: print(varc)(readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: (readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: readFile(varf)(print(varc);closeRfILE(varf))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: (print(varc);closeRfILE(varf))
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: print(varc)closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: (test.in)---

ExecutionStack: 
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: ---

ExecutionStack: (string varf;(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: string varf(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---

ExecutionStack: varf=(test.in)(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---

ExecutionStack: (openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---

ExecutionStack: openRFile(varf)(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---

ExecutionStack: (int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: int varc(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: (readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: readFile(varf)(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: (print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: print(varc)(readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: (readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: readFile(varf)(print(varc);closeRfILE(varf))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: (print(varc);closeRfILE(varf))
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: print(varc)closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: (test.in)---

ExecutionStack: 
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: ---

ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: ---

ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: ---

ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: ---

ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: ---

ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: ---

ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---

ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---

ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---

ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---

ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: ---

ExecutionStack: (bool a;(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: bool a(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: a -> (false)   
Output: []
FileTable: ---

ExecutionStack: int v(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   
Output: []
FileTable: ---

ExecutionStack: (a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: ---

ExecutionStack: a=(true)( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: ---

ExecutionStack: ( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---

ExecutionStack:  IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---

ExecutionStack: v=(2)print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---

ExecutionStack: print(v)
SymbolTable: a -> (true)   v -> (2)   
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: a -> (true)   v -> (2)   
Output: [(2)]
FileTable: ---

ExecutionStack: (string s;(s=(Astazi e duminica);print(s)))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: string s(s=(Astazi e duminica);print(s))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (s=(Astazi e duminica);print(s))
SymbolTable: s -> ("")   
Output: []
FileTable: ---

ExecutionStack: s=(Astazi e duminica)print(s)
SymbolTable: s -> ("")   
Output: []
FileTable: ---

ExecutionStack: print(s)
SymbolTable: s -> (Astazi e duminica)   
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: s -> (Astazi e duminica)   
Output: [(Astazi e duminica)]
FileTable: ---

ExecutionStack: (string varf;(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: string varf(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---

ExecutionStack: varf=(test.in)(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---

ExecutionStack: (openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---

ExecutionStack: openRFile(varf)(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---

ExecutionStack: (int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: int varc(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: (readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: readFile(varf)(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: (print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: print(varc)(readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: (readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: readFile(varf)(print(varc);closeRfILE(varf))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: (print(varc);closeRfILE(varf))
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: print(varc)closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: (test.in)---

ExecutionStack: 
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: ---

ExecutionStack: (string varf;(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: string varf(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---

ExecutionStack: varf=(test.in)(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---

ExecutionStack: (openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---

ExecutionStack: openRFile(varf)(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---

ExecutionStack: (int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: int varc(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: (readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: readFile(varf)(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: (print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: print(varc)(readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)---

ExecutionStack: (readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: readFile(varf)(print(varc);closeRfILE(varf))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: (print(varc);closeRfILE(varf))
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: print(varc)closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---

ExecutionStack: closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: (test.in)---

ExecutionStack: 
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: ---

ExecutionStack: (string s;(s=(Astazi e duminica);print(s)))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: string s(s=(Astazi e duminica);print(s))
SymbolTable: 
Output: []
FileTable: ---

ExecutionStack: (s=(Astazi e duminica);print(s))
SymbolTable: s -> ("")   
Output: []
FileTable: ---

ExecutionStack: s=(Astazi e duminica)print(s)
SymbolTable: s -> ("")   
Output: []
FileTable: ---

ExecutionStack: print(s)
SymbolTable: s -> (Astazi e duminica)   
Output: []
FileTable: ---

ExecutionStack: 
SymbolTable: s -> (Astazi e duminica)   
Output: [(Astazi e duminica)]
FileTable: ---

ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: ---
Heap: ------------------


ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: ---
Heap: ------------------


ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: ---
Heap: ------------------


ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: ---
Heap: ------------------


ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: ---
Heap: ------------------


ExecutionStack: (bool a;(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: bool a(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: a -> (false)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int v(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: a=(true)( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: ( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack:  IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: a -> (true)   v -> (2)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: a -> (true)   v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: ---
Heap: ------------------


ExecutionStack: (bool a;(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: bool a(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: a -> (false)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int v(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: a=(true)( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: ( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack:  IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: a -> (true)   v -> (2)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: a -> (true)   v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: (string s;(s=(ana);print(s)))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: string s(s=(ana);print(s))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (s=(ana);print(s))
SymbolTable: s -> ("")   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: s=(ana)print(s)
SymbolTable: s -> ("")   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(s)
SymbolTable: s -> (ana)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: s -> (ana)   
Output: [(ana)]
FileTable: ---
Heap: ------------------


ExecutionStack: (string varf;(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: string varf(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: varf=(test.in)(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: openRFile(varf)(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: int varc(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: (readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: readFile(varf)(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: (print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: print(varc)(readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: (readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: readFile(varf)(print(varc);closeRfILE(varf))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: (print(varc);closeRfILE(varf))
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: print(varc)closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: 
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: ---
Heap: ------------------


ExecutionStack:  IF ( (40)==(30) )  THEN ( print((ana)) ) ELSE ( print((ion)) ) 
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print((ion))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: 
Output: [(ion)]
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(v);print(a)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(print(v);print(a)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(print(v);print(a))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (print(v);print(a))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(v)print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int)]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int), (2, Ref(int))]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(rH(v))print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(rH(v))print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: print(rH(v))(wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: wH(v, (30))print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: ---
Heap: 	1 -> (30)
------------------


ExecutionStack: 
SymbolTable: v -> (1, int)   
Output: [(20), (35)]
FileTable: ---
Heap: 	1 -> (30)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: new(v, (30))(new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: (new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	3 -> (30)
------------------


ExecutionStack: new(a, v)print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	3 -> (30)
------------------


ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	4 -> (3, int)
------------------


ExecutionStack: print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	4 -> (3, int)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	4 -> (3, int)
------------------


ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: ---
Heap: ------------------


ExecutionStack: (bool a;(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: bool a(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: a -> (false)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int v(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: a=(true)( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: ( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack:  IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: a -> (true)   v -> (2)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: a -> (true)   v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: (string s;(s=(ana);print(s)))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: string s(s=(ana);print(s))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (s=(ana);print(s))
SymbolTable: s -> ("")   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: s=(ana)print(s)
SymbolTable: s -> ("")   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(s)
SymbolTable: s -> (ana)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: s -> (ana)   
Output: [(ana)]
FileTable: ---
Heap: ------------------


ExecutionStack: (string varf;(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: string varf(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: varf=(test.in)(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: openRFile(varf)(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: int varc(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: (readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: readFile(varf)(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: (print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: print(varc)(readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: (readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: readFile(varf)(print(varc);closeRfILE(varf))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: (print(varc);closeRfILE(varf))
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: print(varc)closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: 
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: ---
Heap: ------------------


ExecutionStack:  IF ( (40)==(30) )  THEN ( print((ana)) ) ELSE ( print((ion)) ) 
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print((ion))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: 
Output: [(ion)]
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(v);print(a)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(print(v);print(a)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(print(v);print(a))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (print(v);print(a))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(v)print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int)]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int), (2, Ref(int))]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: v -> (1, int)   
Output: [(20), (35)]
FileTable: ---
Heap: 	1 -> (30)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	4 -> (3, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(rH(v))print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: ---
Heap: ------------------


ExecutionStack: (bool a;(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: bool a(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: a -> (false)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int v(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: a=(true)( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: ( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack:  IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: a -> (true)   v -> (2)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: a -> (true)   v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: (string s;(s=(ana);print(s)))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: string s(s=(ana);print(s))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (s=(ana);print(s))
SymbolTable: s -> ("")   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: s=(ana)print(s)
SymbolTable: s -> ("")   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(s)
SymbolTable: s -> (ana)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: s -> (ana)   
Output: [(ana)]
FileTable: ---
Heap: ------------------


ExecutionStack: (string varf;(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: string varf(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: varf=(test.in)(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: openRFile(varf)(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: int varc(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: (readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: readFile(varf)(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: (print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: print(varc)(readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: (readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: readFile(varf)(print(varc);closeRfILE(varf))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: (print(varc);closeRfILE(varf))
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: print(varc)closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: 
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: ---
Heap: ------------------


ExecutionStack:  IF ( (40)==(30) )  THEN ( print((ana)) ) ELSE ( print((ion)) ) 
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print((ion))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: 
Output: [(ion)]
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(v);print(a)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(print(v);print(a)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(print(v);print(a))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (print(v);print(a))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(v)print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int)]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int), (2, Ref(int))]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: print(rH(v))(wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: wH(v, (30))print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: ---
Heap: 	1 -> (30)
------------------


ExecutionStack: 
SymbolTable: v -> (1, int)   
Output: [(20), (35)]
FileTable: ---
Heap: 	1 -> (30)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: new(v, (30))(new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: (new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	3 -> (30)
------------------


ExecutionStack: new(a, v)print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	3 -> (30)
------------------


ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	4 -> (3, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(v);print(a)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(print(v);print(a)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(print(v);print(a))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (print(v);print(a))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(v)print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int)]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int), (2, Ref(int))]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: print(rH(v))(wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: wH(v, (30))print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: ---
Heap: 	1 -> (30)
------------------


ExecutionStack: 
SymbolTable: v -> (1, int)   
Output: [(20), (35)]
FileTable: ---
Heap: 	1 -> (30)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(rH(v))print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int), (2, Ref(int))]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: v -> (1, int)   
Output: [(20), (35)]
FileTable: ---
Heap: 	1 -> (30)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	4 -> (3, int)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int), (2, Ref(int))]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int), (2, Ref(int))]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int), (2, Ref(int))]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: ---
Heap: ------------------


ExecutionStack:  IF ( (40)==(30) )  THEN ( print((ana)) ) ELSE ( print((ion)) ) 
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print((ion))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: 
Output: [(ion)]
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(v);print(a)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(print(v);print(a)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(print(v);print(a))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (print(v);print(a))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(v)print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int)]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int), (2, Ref(int))]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(rH(v))print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: ---
Heap: ------------------


ExecutionStack: (bool a;(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: bool a(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: a -> (false)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int v(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: a=(true)( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: ( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack:  IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: a -> (true)   v -> (2)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: a -> (true)   v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: (string s;(s=(ana);print(s)))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: string s(s=(ana);print(s))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (s=(ana);print(s))
SymbolTable: s -> ("")   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: s=(ana)print(s)
SymbolTable: s -> ("")   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(s)
SymbolTable: s -> (ana)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: s -> (ana)   
Output: [(ana)]
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: s -> (ana)   
Output: [(ana)]
FileTable: ---
Heap: ------------------


ExecutionStack: (string varf;(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: string varf(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: varf=(test.in)(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: openRFile(varf)(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: int varc(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: (readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: readFile(varf)(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: (print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: print(varc)(readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: (readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: readFile(varf)(print(varc);closeRfILE(varf))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: (print(varc);closeRfILE(varf))
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: print(varc)closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: (test.in)---
Heap: ------------------


ExecutionStack: 
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: ---
Heap: ------------------


ExecutionStack:  IF ( (40)==(30) )  THEN ( print((ana)) ) ELSE ( print((ion)) ) 
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print((ion))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: 
Output: [(ion)]
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(v);print(a)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(print(v);print(a)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(print(v);print(a))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (print(v);print(a))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(v)print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int)]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int), (2, Ref(int))]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(rH(v))print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: print(rH(v))(wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: wH(v, (30))print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: ---
Heap: 	1 -> (30)
------------------


ExecutionStack: 
SymbolTable: v -> (1, int)   
Output: [(20), (35)]
FileTable: ---
Heap: 	1 -> (30)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: new(v, (30))(new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: (new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	3 -> (30)
------------------


ExecutionStack: new(a, v)print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	3 -> (30)
------------------


ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	4 -> (3, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(v);print(a)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(print(v);print(a)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(print(v);print(a))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (print(v);print(a))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(v)print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int)]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int), (2, Ref(int))]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: new(v, (30))(new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: (new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	3 -> (30)
------------------


ExecutionStack: new(a, v)print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	3 -> (30)
------------------


ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	4 -> (3, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(v);print(a)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(print(v);print(a)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(print(v);print(a))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (print(v);print(a))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(v)print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int)]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int), (2, Ref(int))]
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: new(v, (30))(new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: (new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	3 -> (30)
------------------


ExecutionStack: new(a, v)print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	3 -> (30)
------------------


ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	4 -> (3, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: print(rH(v))print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: ---
Heap: 	2 -> (1, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5))))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: new(v, (20))(print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: print(rH(v))(wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: (wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: wH(v, (30))print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: ---
Heap: 	1 -> (20)
------------------


ExecutionStack: print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: ---
Heap: 	1 -> (30)
------------------


ExecutionStack: 
SymbolTable: v -> (1, int)   
Output: [(20), (35)]
FileTable: ---
Heap: 	1 -> (30)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: ---
Heap: 	4 -> (3, int)
------------------


ExecutionStack: (bool a;(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: bool a(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: a -> (false)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int v(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: a=(true)( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: ( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack:  IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: a -> (true)   v -> (2)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: a -> (true)   v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: ---
Heap: ------------------


ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: a -> (true)   v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: ---
Heap: ------------------


ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: 
Heap: ------------------


ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: 
Heap: ------------------


ExecutionStack: (bool a;(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: bool a(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: a -> (false)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int v(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: a=(true)( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: ( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack:  IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: a -> (true)   v -> (2)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: a -> (true)   v -> (2)   
Output: [(2)]
FileTable: 
Heap: ------------------


ExecutionStack: (string s;(s=(ana);print(s)))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: string s(s=(ana);print(s))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (s=(ana);print(s))
SymbolTable: s -> ("")   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: s=(ana)print(s)
SymbolTable: s -> ("")   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(s)
SymbolTable: s -> (ana)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: s -> (ana)   
Output: [(ana)]
FileTable: 
Heap: ------------------


ExecutionStack: (string varf;(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: string varf(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: varf=(test.in)(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: openRFile(varf)(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)
Heap: ------------------


ExecutionStack: int varc(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)
Heap: ------------------


ExecutionStack: (readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)
Heap: ------------------


ExecutionStack: readFile(varf)(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)
Heap: ------------------


ExecutionStack: (print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)
Heap: ------------------


ExecutionStack: print(varc)(readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)
Heap: ------------------


ExecutionStack: (readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)
Heap: ------------------


ExecutionStack: readFile(varf)(print(varc);closeRfILE(varf))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)
Heap: ------------------


ExecutionStack: (print(varc);closeRfILE(varf))
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)
Heap: ------------------


ExecutionStack: print(varc)closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)
Heap: ------------------


ExecutionStack: closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: (test.in)
Heap: ------------------


ExecutionStack: 
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: 
Heap: ------------------


ExecutionStack:  IF ( (40)==(30) )  THEN ( print((ana)) ) ELSE ( print((ion)) ) 
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print((ion))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: 
Output: [(ion)]
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(v);print(a)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(print(v);print(a)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(print(v);print(a))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (print(v);print(a))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: print(v)print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int), (2, Ref(int))]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: print(rH(v))print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(20), (25)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: new(v, (20))(print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: print(rH(v))(wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: wH(v, (30))print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (30)
------------------


ExecutionStack: 
SymbolTable: v -> (1, int)   
Output: [(20), (35)]
FileTable: 
Heap: 	1 -> (30)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: new(v, (30))(new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: (new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: new(a, v)print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: [(30)]
FileTable: 
Heap: 	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int), (2, Ref(int))]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: ((int v;(v=(4);(WHILE(v>(0));(print(v);v=v-(1)))));print(v))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (int v;(v=(4);(WHILE(v>(0));(print(v);v=v-(1)))))print(v)
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int v(v=(4);(WHILE(v>(0));(print(v);v=v-(1))))print(v)
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (v=(4);(WHILE(v>(0));(print(v);v=v-(1))))print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=(4)(WHILE(v>(0));(print(v);v=v-(1)))print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (WHILE(v>(0));(print(v);v=v-(1)))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1), (0)]
FileTable: 
Heap: ------------------


ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: 
Heap: ------------------


ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: 
Heap: ------------------


ExecutionStack: (bool a;(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: bool a(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: a -> (false)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int v(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: a=(true)( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: ( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack:  IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: a -> (true)   v -> (2)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: a -> (true)   v -> (2)   
Output: [(2)]
FileTable: 
Heap: ------------------


ExecutionStack: (string s;(s=(ana);print(s)))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: string s(s=(ana);print(s))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (s=(ana);print(s))
SymbolTable: s -> ("")   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: s=(ana)print(s)
SymbolTable: s -> ("")   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(s)
SymbolTable: s -> (ana)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: s -> (ana)   
Output: [(ana)]
FileTable: 
Heap: ------------------


ExecutionStack: (string varf;(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: string varf(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: varf=(test.in)(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: openRFile(varf)(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)
Heap: ------------------


ExecutionStack: int varc(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)
Heap: ------------------


ExecutionStack: (readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)
Heap: ------------------


ExecutionStack: readFile(varf)(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)
Heap: ------------------


ExecutionStack: (print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)
Heap: ------------------


ExecutionStack: print(varc)(readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)
Heap: ------------------


ExecutionStack: (readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)
Heap: ------------------


ExecutionStack: readFile(varf)(print(varc);closeRfILE(varf))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)
Heap: ------------------


ExecutionStack: (print(varc);closeRfILE(varf))
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)
Heap: ------------------


ExecutionStack: print(varc)closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)
Heap: ------------------


ExecutionStack: closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: (test.in)
Heap: ------------------


ExecutionStack: 
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: 
Heap: ------------------


ExecutionStack:  IF ( (40)==(30) )  THEN ( print((ana)) ) ELSE ( print((ion)) ) 
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print((ion))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: 
Output: [(ion)]
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(v);print(a)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(print(v);print(a)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(print(v);print(a))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (print(v);print(a))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: print(v)print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int), (2, Ref(int))]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: print(rH(v))print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(20), (25)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: new(v, (20))(print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: print(rH(v))(wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: wH(v, (30))print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (30)
------------------


ExecutionStack: 
SymbolTable: v -> (1, int)   
Output: [(20), (35)]
FileTable: 
Heap: 	1 -> (30)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: new(v, (30))(new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: (new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: new(a, v)print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: [(30)]
FileTable: 
Heap: 	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: ((int v;(v=(4);(WHILE(v>(0));(print(v);v=v-(1)))));print(v))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (int v;(v=(4);(WHILE(v>(0));(print(v);v=v-(1)))))print(v)
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int v(v=(4);(WHILE(v>(0));(print(v);v=v-(1))))print(v)
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (v=(4);(WHILE(v>(0));(print(v);v=v-(1))))print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=(4)(WHILE(v>(0));(print(v);v=v-(1)))print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (WHILE(v>(0));(print(v);v=v-(1)))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1), (0)]
FileTable: 
Heap: ------------------


ExecutionStack: ((int v;(v=(4);(WHILE(v>=(0));(print(v);v=v-(1)))));print(v))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (int v;(v=(4);(WHILE(v>=(0));(print(v);v=v-(1)))))print(v)
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int v(v=(4);(WHILE(v>=(0));(print(v);v=v-(1))))print(v)
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (v=(4);(WHILE(v>=(0));(print(v);v=v-(1))))print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=(4)(WHILE(v>=(0));(print(v);v=v-(1)))print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (WHILE(v>=(0));(print(v);v=v-(1)))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1), (0)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>=(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (-1)   
Output: [(4), (3), (2), (1), (0)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (-1)   
Output: [(4), (3), (2), (1), (0)]
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (-1)   
Output: [(4), (3), (2), (1), (0), (-1)]
FileTable: 
Heap: ------------------


ExecutionStack: ((int v;(v=(4);(WHILE(v>(0));(print(v);v=v-(1)))));print(v))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (int v;(v=(4);(WHILE(v>(0));(print(v);v=v-(1)))))print(v)
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int v(v=(4);(WHILE(v>(0));(print(v);v=v-(1))))print(v)
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (v=(4);(WHILE(v>(0));(print(v);v=v-(1))))print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=(4)(WHILE(v>(0));(print(v);v=v-(1)))print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (WHILE(v>(0));(print(v);v=v-(1)))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1), (0)]
FileTable: 
Heap: ------------------


ExecutionStack: ((int v;(v=(4);(WHILE(v>(0));(print(v);v=v-(1)))));print(v))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (int v;(v=(4);(WHILE(v>(0));(print(v);v=v-(1)))))print(v)
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int v(v=(4);(WHILE(v>(0));(print(v);v=v-(1))))print(v)
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (v=(4);(WHILE(v>(0));(print(v);v=v-(1))))print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=(4)(WHILE(v>(0));(print(v);v=v-(1)))print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (WHILE(v>(0));(print(v);v=v-(1)))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: ((int v;(v=(4);(WHILE(v>(0));(print(v);v=v-(1)))));print(v))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (int v;(v=(4);(WHILE(v>(0));(print(v);v=v-(1)))))print(v)
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int v(v=(4);(WHILE(v>(0));(print(v);v=v-(1))))print(v)
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (v=(4);(WHILE(v>(0));(print(v);v=v-(1))))print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=(4)(WHILE(v>(0));(print(v);v=v-(1)))print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (WHILE(v>(0));(print(v);v=v-(1)))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))print(v)
SymbolTable: v -> (4)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)WHILE(v>(0))
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))
SymbolTable: v -> (3)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: ((int v;(v=(4);(WHILE(v>(0));(print(v);v=v-(1)))));print(v))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (int v;(v=(4);(WHILE(v>(0));(print(v);v=v-(1)))))print(v)
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int v(v=(4);(WHILE(v>(0));(print(v);v=v-(1))))print(v)
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (v=(4);(WHILE(v>(0));(print(v);v=v-(1))))print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=(4)(WHILE(v>(0));(print(v);v=v-(1)))print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (WHILE(v>(0));(print(v);v=v-(1)))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1), (0)]
FileTable: 
Heap: ------------------


ExecutionStack: ((int v;(v=(4);(WHILE(v>(0));(print(v);v=v-(1)))));print(v))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (int v;(v=(4);(WHILE(v>(0));(print(v);v=v-(1)))))print(v)
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int v(v=(4);(WHILE(v>(0));(print(v);v=v-(1))))print(v)
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (v=(4);(WHILE(v>(0));(print(v);v=v-(1))))print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=(4)(WHILE(v>(0));(print(v);v=v-(1)))print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (WHILE(v>(0));(print(v);v=v-(1)))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1), (0)]
FileTable: 
Heap: ------------------


ExecutionStack: ((int v;(v=(4);(WHILE(v>(0));(print(v);v=v-(1)))));print(v))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (int v;(v=(4);(WHILE(v>(0));(print(v);v=v-(1)))))print(v)
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int v(v=(4);(WHILE(v>(0));(print(v);v=v-(1))))print(v)
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (v=(4);(WHILE(v>(0));(print(v);v=v-(1))))print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=(4)(WHILE(v>(0));(print(v);v=v-(1)))print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (WHILE(v>(0));(print(v);v=v-(1)))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (4)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (3)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------


ExecutionStack: v=v-(1)WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: WHILE(v>(0))(print(v);v=v-(1))print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1), (0)]
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: new(v, (30))(new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: (new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: new(a, v)print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: [(30)]
FileTable: 
Heap: 	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: 
Heap: ------------------


ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: 
Heap: ------------------


ExecutionStack: (bool a;(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: bool a(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: a -> (false)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: int v(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: a=(true)( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: ( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack:  IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: v=(2)print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(v)
SymbolTable: a -> (true)   v -> (2)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: a -> (true)   v -> (2)   
Output: [(2)]
FileTable: 
Heap: ------------------


ExecutionStack: (string s;(s=(ana);print(s)))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: string s(s=(ana);print(s))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (s=(ana);print(s))
SymbolTable: s -> ("")   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: s=(ana)print(s)
SymbolTable: s -> ("")   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: print(s)
SymbolTable: s -> (ana)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: 
SymbolTable: s -> (ana)   
Output: [(ana)]
FileTable: 
Heap: ------------------


ExecutionStack: (string varf;(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: string varf(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: varf=(test.in)(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: openRFile(varf)(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)
Heap: ------------------


ExecutionStack: int varc(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: (test.in)
Heap: ------------------


ExecutionStack: (readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)
Heap: ------------------


ExecutionStack: readFile(varf)(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: (test.in)
Heap: ------------------


ExecutionStack: (print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)
Heap: ------------------


ExecutionStack: print(varc)(readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: (test.in)
Heap: ------------------


ExecutionStack: (readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)
Heap: ------------------


ExecutionStack: readFile(varf)(print(varc);closeRfILE(varf))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)
Heap: ------------------


ExecutionStack: (print(varc);closeRfILE(varf))
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)
Heap: ------------------


ExecutionStack: print(varc)closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: (test.in)
Heap: ------------------


ExecutionStack: closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: (test.in)
Heap: ------------------


ExecutionStack: 
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: new(v, (30))(new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: (new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: new(a, v)print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: [(30)]
FileTable: 
Heap: 	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: new(v, (30))(new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: (new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: new(a, v)print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: [(30)]
FileTable: 
Heap: 	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (30));(Ref(Ref(int)) a;(new(a, v);(new(v, (20));(new(a, v);print(rH(rH(a)))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (30));(Ref(Ref(int)) a;(new(a, v);(new(v, (20));(new(a, v);print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (new(v, (30));(Ref(Ref(int)) a;(new(a, v);(new(v, (20));(new(a, v);print(rH(rH(a))))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: new(v, (30))(Ref(Ref(int)) a;(new(a, v);(new(v, (20));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (20));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (30)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (20));(new(a, v);print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (30)
------------------


ExecutionStack: (new(a, v);(new(v, (20));(new(a, v);print(rH(rH(a))))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (30)
------------------


ExecutionStack: new(a, v)(new(v, (20));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (30)
------------------


ExecutionStack: (new(v, (20));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (30)
	2 -> (1, int)
------------------


ExecutionStack: new(v, (20))(new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (30)
	2 -> (1, int)
------------------


ExecutionStack: (new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (30)
	2 -> (1, int)
	3 -> (20)
------------------


ExecutionStack: new(a, v)print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (30)
	2 -> (1, int)
	3 -> (20)
------------------


ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (30)
	3 -> (20)
	4 -> (3, int)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: [(20)]
FileTable: 
Heap: 	3 -> (20)
	4 -> (3, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: new(v, (30))(new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: (new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: new(a, v)print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: [(30)]
FileTable: 
Heap: 	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (30));(Ref(Ref(int)) a;(new(a, v);(new(v, (20));(new(a, v);print(rH(rH(a)))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (30));(Ref(Ref(int)) a;(new(a, v);(new(v, (20));(new(a, v);print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (new(v, (30));(Ref(Ref(int)) a;(new(a, v);(new(v, (20));(new(a, v);print(rH(rH(a))))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: new(v, (30))(Ref(Ref(int)) a;(new(a, v);(new(v, (20));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (20));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (30)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (20));(new(a, v);print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (30)
------------------


ExecutionStack: (new(a, v);(new(v, (20));(new(a, v);print(rH(rH(a))))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (30)
------------------


ExecutionStack: new(a, v)(new(v, (20));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (30)
------------------


ExecutionStack: (new(v, (20));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (30)
	2 -> (1, int)
------------------


ExecutionStack: new(v, (20))(new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (30)
	2 -> (1, int)
------------------


ExecutionStack: (new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (30)
	2 -> (1, int)
	3 -> (20)
------------------


ExecutionStack: new(a, v)print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (30)
	2 -> (1, int)
	3 -> (20)
------------------


ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (30)
	3 -> (20)
	4 -> (3, int)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: [(20)]
FileTable: 
Heap: 	3 -> (20)
	4 -> (3, int)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: [(20)]
FileTable: 
Heap: 	3 -> (20)
	4 -> (3, int)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: [(20)]
FileTable: 
Heap: 	3 -> (20)
	4 -> (3, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: new(v, (30))(new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: (new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: new(a, v)print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: [(30)]
FileTable: 
Heap: 	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: [(30)]
FileTable: 
Heap: 	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: [(30)]
FileTable: 
Heap: 	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: new(v, (30))(new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: (new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: new(a, v)print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: [(30)]
FileTable: 
Heap: 	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a)))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(new(v, (30));(new(a, v);print(rH(rH(a))))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(v, (30));(new(a, v);print(rH(rH(a)))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: new(v, (30))(new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: (new(a, v);print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: new(a, v)print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: 
SymbolTable: a -> (4, Ref(int))   v -> (3, int)   
Output: [(30)]
FileTable: 
Heap: 	3 -> (30)
	4 -> (3, int)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a)))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));print(rH(rH(a)))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(new(v, (30));print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(new(v, (30));print(rH(rH(a))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(v, (30));print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: new(v, (30))print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a)))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------


ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));print(rH(rH(a)))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(a, v);(new(v, (30));print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: new(a, v)(new(v, (30));print(rH(rH(a))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------


ExecutionStack: (new(v, (30));print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: new(v, (30))print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------


ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------


ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------

[ID:1
ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (int v;(v=(4);(WHILE(v>(0));print(v))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (int v;(Ref(int) a;(v=(10);(new(a, (22));(fork((new(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (bool a;(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: bool a(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: bool a(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: a -> (false)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: a -> (false)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int v(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int v(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: a=(true)( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: a=(true)( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: ( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: ( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack:  IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack:  IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=(2)print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=(2)print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(v)
SymbolTable: a -> (true)   v -> (2)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(v)
SymbolTable: a -> (true)   v -> (2)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (true)   v -> (2)   
Output: [(2)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (string s;(s=(ana);print(s)))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: string s(s=(ana);print(s))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: string s(s=(ana);print(s))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (s=(ana);print(s))
SymbolTable: s -> ("")   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (s=(ana);print(s))
SymbolTable: s -> ("")   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: s=(ana)print(s)
SymbolTable: s -> ("")   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: s=(ana)print(s)
SymbolTable: s -> ("")   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(s)
SymbolTable: s -> (ana)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(s)
SymbolTable: s -> (ana)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: 
SymbolTable: s -> (ana)   
Output: [(ana)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (string varf;(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: string varf(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: string varf(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: varf=(test.in)(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: varf=(test.in)(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: openRFile(varf)(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: openRFile(varf)(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: (int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: int varc(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: int varc(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: (readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: (readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: readFile(varf)(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: readFile(varf)(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: (print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: (print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: print(varc)(readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: print(varc)(readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: (readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: (readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: readFile(varf)(print(varc);closeRfILE(varf))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: readFile(varf)(print(varc);closeRfILE(varf))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: (print(varc);closeRfILE(varf))
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: (print(varc);closeRfILE(varf))
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: print(varc)closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: print(varc)closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: 
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack:  IF ( (40)==(30) )  THEN ( print((ana)) ) ELSE ( print((ion)) ) 
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print((ion))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print((ion))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: 
SymbolTable: 
Output: [(ion)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(v);print(a)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(v);print(a)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (new(a, v);(print(v);print(a)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (new(a, v);(print(v);print(a)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: new(a, v)(print(v);print(a))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: new(a, v)(print(v);print(a))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (print(v);print(a))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: (print(v);print(a))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: print(v)print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: print(v)print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int), (2, Ref(int))]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: new(a, v)(print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: new(a, v)(print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: (print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: print(rH(v))print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: print(rH(v))print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(20), (25)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: (Ref(int) v;(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) v(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) v(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(v, (20))(print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(v, (20))(print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: print(rH(v))(wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: print(rH(v))(wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: wH(v, (30))print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: wH(v, (30))print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: v -> (1, int)   
Output: [(20), (35)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a)))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a)))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));print(rH(rH(a)))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));print(rH(rH(a)))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (new(a, v);(new(v, (30));print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (new(a, v);(new(v, (30));print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: new(a, v)(new(v, (30));print(rH(rH(a))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: new(a, v)(new(v, (30));print(rH(rH(a))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (new(v, (30));print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: (new(v, (30));print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: new(v, (30))print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: new(v, (30))print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------
][ID:1
ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------
][ID:1
ExecutionStack: (int v;(v=(4);(WHILE(v>(0));print(v))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int v(v=(4);(WHILE(v>(0));print(v)))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int v(v=(4);(WHILE(v>(0));print(v)))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (v=(4);(WHILE(v>(0));print(v)))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (v=(4);(WHILE(v>(0));print(v)))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=(4)(WHILE(v>(0));print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=(4)(WHILE(v>(0));print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (WHILE(v>(0));print(v))
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (WHILE(v>(0));print(v))
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: WHILE(v>(0))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: WHILE(v>(0))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(v)v=v-(1)WHILE(v>(0))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(v)v=v-(1)WHILE(v>(0))print(v)
SymbolTable: v -> (4)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=v-(1)WHILE(v>(0))print(v)
SymbolTable: v -> (4)   
Output: [(4)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=v-(1)WHILE(v>(0))print(v)
SymbolTable: v -> (4)   
Output: [(4)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: WHILE(v>(0))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: WHILE(v>(0))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(v)v=v-(1)WHILE(v>(0))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(v)v=v-(1)WHILE(v>(0))print(v)
SymbolTable: v -> (3)   
Output: [(4)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=v-(1)WHILE(v>(0))print(v)
SymbolTable: v -> (3)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=v-(1)WHILE(v>(0))print(v)
SymbolTable: v -> (3)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: WHILE(v>(0))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: WHILE(v>(0))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(v)v=v-(1)WHILE(v>(0))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(v)v=v-(1)WHILE(v>(0))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=v-(1)WHILE(v>(0))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=v-(1)WHILE(v>(0))print(v)
SymbolTable: v -> (2)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: WHILE(v>(0))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: WHILE(v>(0))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (print(v);v=v-(1))WHILE(v>(0))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(v)v=v-(1)WHILE(v>(0))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(v)v=v-(1)WHILE(v>(0))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=v-(1)WHILE(v>(0))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=v-(1)WHILE(v>(0))print(v)
SymbolTable: v -> (1)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: WHILE(v>(0))print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: WHILE(v>(0))print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(v)
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: 
SymbolTable: v -> (0)   
Output: [(4), (3), (2), (1), (0)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (int v;(Ref(int) a;(v=(10);(new(a, (22));(fork((new(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int v(Ref(int) a;(v=(10);(new(a, (22));(fork((new(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int v(Ref(int) a;(v=(10);(new(a, (22));(fork((new(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (Ref(int) a;(v=(10);(new(a, (22));(fork((new(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (Ref(int) a;(v=(10);(new(a, (22));(fork((new(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) a(v=(10);(new(a, (22));(fork((new(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) a(v=(10);(new(a, (22));(fork((new(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (v=(10);(new(a, (22));(fork((new(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))
SymbolTable: a -> (0, int)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (v=(10);(new(a, (22));(fork((new(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))
SymbolTable: a -> (0, int)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=(10)(new(a, (22));(fork((new(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))
SymbolTable: a -> (0, int)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=(10)(new(a, (22));(fork((new(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))
SymbolTable: a -> (0, int)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(a, (22));(fork((new(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))
SymbolTable: a -> (0, int)   v -> (10)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(a, (22));(fork((new(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))
SymbolTable: a -> (0, int)   v -> (10)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(a, (22))(fork((new(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))
SymbolTable: a -> (0, int)   v -> (10)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(a, (22))(fork((new(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))
SymbolTable: a -> (0, int)   v -> (10)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (fork((new(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (fork((new(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: fork((new(a, (30));(v=(32);(print(v);print(rH(a))))))(print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: fork((new(a, (30));(v=(32);(print(v);print(rH(a))))))(print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: (new(a, (30));(v=(32);(print(v);print(rH(a)))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: (new(a, (30));(v=(32);(print(v);print(rH(a)))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: new(a, (30))(v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: new(a, (30))(v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: new(a, (30))(v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: new(a, (30))(v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (22)
	2 -> (30)
------------------
, ID:2
ExecutionStack: (v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (2, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (22)
	2 -> (30)
------------------
][ID:1
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (22)
	2 -> (30)
------------------
, ID:2
ExecutionStack: (v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (2, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (22)
	2 -> (30)
------------------
][ID:1
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (22)
	2 -> (30)
------------------
, ID:2
ExecutionStack: (v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (2, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (22)
	2 -> (30)
------------------
][ID:1
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (22)
	2 -> (30)
------------------
, ID:2
ExecutionStack: (v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (2, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (22)
	2 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (22)]
FileTable: 
Heap: 	1 -> (22)
	2 -> (30)
------------------
, ID:2
ExecutionStack: v=(32)(print(v);print(rH(a)))
SymbolTable: a -> (2, int)   v -> (10)   
Output: [(10), (22)]
FileTable: 
Heap: 	1 -> (22)
	2 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (22)]
FileTable: 
Heap: 	1 -> (22)
	2 -> (30)
------------------
, ID:2
ExecutionStack: v=(32)(print(v);print(rH(a)))
SymbolTable: a -> (2, int)   v -> (10)   
Output: [(10), (22)]
FileTable: 
Heap: 	1 -> (22)
	2 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (22)]
FileTable: 
Heap: 	2 -> (30)
------------------
, ID:2
ExecutionStack: v=(32)(print(v);print(rH(a)))
SymbolTable: a -> (2, int)   v -> (10)   
Output: [(10), (22)]
FileTable: 
Heap: 	2 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (22)]
FileTable: 
Heap: 	2 -> (30)
------------------
, ID:2
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (2, int)   v -> (32)   
Output: [(10), (22)]
FileTable: 
Heap: 	2 -> (30)
------------------
][ID:2
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (2, int)   v -> (32)   
Output: [(10), (22)]
FileTable: 
Heap: 	2 -> (30)
------------------
][ID:2
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (2, int)   v -> (32)   
Output: [(10), (22)]
FileTable: 
Heap: 	2 -> (30)
------------------
][ID:2
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (2, int)   v -> (32)   
Output: [(10), (22)]
FileTable: 
Heap: 	2 -> (30)
------------------
][ID:2
ExecutionStack: print(rH(a))
SymbolTable: a -> (2, int)   v -> (32)   
Output: [(10), (22), (32)]
FileTable: 
Heap: 	2 -> (30)
------------------
][ID:2
ExecutionStack: print(rH(a))
SymbolTable: a -> (2, int)   v -> (32)   
Output: [(10), (22), (32)]
FileTable: 
Heap: 	2 -> (30)
------------------
][ID:2
ExecutionStack: 
SymbolTable: a -> (2, int)   v -> (32)   
Output: [(10), (22), (32), (30)]
FileTable: 
Heap: 	2 -> (30)
------------------
][ID:1
ExecutionStack: (int v;(Ref(int) a;(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int v(Ref(int) a;(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int v(Ref(int) a;(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (Ref(int) a;(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (Ref(int) a;(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) a(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) a(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))
SymbolTable: a -> (0, int)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))
SymbolTable: a -> (0, int)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=(10)(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))
SymbolTable: a -> (0, int)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=(10)(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))
SymbolTable: a -> (0, int)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))
SymbolTable: a -> (0, int)   v -> (10)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))
SymbolTable: a -> (0, int)   v -> (10)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(a, (22))(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))
SymbolTable: a -> (0, int)   v -> (10)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(a, (22))(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))
SymbolTable: a -> (0, int)   v -> (10)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))))(print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))))(print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: (wH(a, (30));(v=(32);(print(v);print(rH(a)))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: (wH(a, (30));(v=(32);(print(v);print(rH(a)))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: wH(a, (30))(v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: wH(a, (30))(v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: wH(a, (30))(v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: wH(a, (30))(v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: (v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: (v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: (v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: (v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: v=(32)(print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: v=(32)(print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: v=(32)(print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:2
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:2
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:2
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:2
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30), (32)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:2
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30), (32)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:2
ExecutionStack: 
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30), (32), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: (int v;(Ref(int) a;(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int v(Ref(int) a;(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int v(Ref(int) a;(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (Ref(int) a;(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (Ref(int) a;(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) a(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) a(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))
SymbolTable: a -> (0, int)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))
SymbolTable: a -> (0, int)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=(10)(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))
SymbolTable: a -> (0, int)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=(10)(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))
SymbolTable: a -> (0, int)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))
SymbolTable: a -> (0, int)   v -> (10)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))
SymbolTable: a -> (0, int)   v -> (10)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(a, (22))(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))
SymbolTable: a -> (0, int)   v -> (10)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(a, (22))(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))
SymbolTable: a -> (0, int)   v -> (10)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))))(print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))))(print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: (wH(a, (30));(v=(32);(print(v);print(rH(a)))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: (wH(a, (30));(v=(32);(print(v);print(rH(a)))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: wH(a, (30))(v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: wH(a, (30))(v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: wH(a, (30))(v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: wH(a, (30))(v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: (v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: (v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: (v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: (v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: v=(32)(print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: v=(32)(print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: v=(32)(print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:2
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:2
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:2
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:2
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30), (32)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:2
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30), (32)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:2
ExecutionStack: 
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30), (32), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: (int v;(Ref(int) a;(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int v(Ref(int) a;(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int v(Ref(int) a;(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (Ref(int) a;(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (Ref(int) a;(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) a(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) a(v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))
SymbolTable: a -> (0, int)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (v=(10);(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))))
SymbolTable: a -> (0, int)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=(10)(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))
SymbolTable: a -> (0, int)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=(10)(new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))
SymbolTable: a -> (0, int)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))
SymbolTable: a -> (0, int)   v -> (10)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(a, (22));(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a)))))
SymbolTable: a -> (0, int)   v -> (10)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(a, (22))(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))
SymbolTable: a -> (0, int)   v -> (10)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(a, (22))(fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))
SymbolTable: a -> (0, int)   v -> (10)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))));(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))))(print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: fork((wH(a, (30));(v=(32);(print(v);print(rH(a))))))(print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: (wH(a, (30));(v=(32);(print(v);print(rH(a)))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: (wH(a, (30));(v=(32);(print(v);print(rH(a)))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: wH(a, (30))(v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: wH(a, (30))(v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: wH(a, (30))(v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
, ID:2
ExecutionStack: wH(a, (30))(v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: []
FileTable: 
Heap: 	1 -> (22)
------------------
][ID:1
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: (v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: (v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: (v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: (v=(32);(print(v);print(rH(a))))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: v=(32)(print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: v=(32)(print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: v=(32)(print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (1, int)   v -> (10)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
, ID:2
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:2
ExecutionStack: (print(v);print(rH(a)))
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:2
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:2
ExecutionStack: print(v)print(rH(a))
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:2
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30), (32)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:2
ExecutionStack: print(rH(a))
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30), (32)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:2
ExecutionStack: 
SymbolTable: a -> (1, int)   v -> (32)   
Output: [(10), (30), (32), (30)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: (int v;(v=(2);print(v)))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int v(v=(2);print(v))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (v=(2);print(v))
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=(2)print(v)
SymbolTable: v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(v)
SymbolTable: v -> (2)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: 
SymbolTable: v -> (2)   
Output: [(2)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (int a;(int b;(a=(2)+(3)*(5);(b=a+(1);print(b)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int a(int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (int b;(a=(2)+(3)*(5);(b=a+(1);print(b))))
SymbolTable: a -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int b(a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: a -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (a=(2)+(3)*(5);(b=a+(1);print(b)))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: a=(2)+(3)*(5)(b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (b=a+(1);print(b))
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: b=a+(1)print(b)
SymbolTable: b -> (0)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(b)
SymbolTable: b -> (18)   a -> (17)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: 
SymbolTable: b -> (18)   a -> (17)   
Output: [(18)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (bool a;(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: bool a(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: bool a(int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: a -> (false)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (int v;(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))))
SymbolTable: a -> (false)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int v(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: int v(a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (a=(true);( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v)))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: a=(true)( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: a=(true)( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (false)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: ( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: ( IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) ;print(v))
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack:  IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack:  IF ( a )  THEN ( v=(2) ) ELSE ( v=(3) ) print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=(2)print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: v=(2)print(v)
SymbolTable: a -> (true)   v -> (0)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(v)
SymbolTable: a -> (true)   v -> (2)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(v)
SymbolTable: a -> (true)   v -> (2)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (true)   v -> (2)   
Output: [(2)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (string s;(s=(ana);print(s)))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: string s(s=(ana);print(s))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: string s(s=(ana);print(s))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (s=(ana);print(s))
SymbolTable: s -> ("")   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (s=(ana);print(s))
SymbolTable: s -> ("")   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: s=(ana)print(s)
SymbolTable: s -> ("")   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: s=(ana)print(s)
SymbolTable: s -> ("")   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(s)
SymbolTable: s -> (ana)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print(s)
SymbolTable: s -> (ana)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: 
SymbolTable: s -> (ana)   
Output: [(ana)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (string varf;(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: string varf(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: string varf(varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (varf=(test.in);(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: varf=(test.in)(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: varf=(test.in)(openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> ("")   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (openRFile(varf);(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: openRFile(varf)(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: openRFile(varf)(int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: (int varc;(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: int varc(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: int varc(readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: (readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: (readFile(varf);(print(varc);(readFile(varf);(print(varc);closeRfILE(varf)))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: readFile(varf)(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: readFile(varf)(print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (0)   varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: (print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: (print(varc);(readFile(varf);(print(varc);closeRfILE(varf))))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: print(varc)(readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: print(varc)(readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: []
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: (readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: (readFile(varf);(print(varc);closeRfILE(varf)))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: readFile(varf)(print(varc);closeRfILE(varf))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: readFile(varf)(print(varc);closeRfILE(varf))
SymbolTable: varc -> (15)   varf -> (test.in)   
Output: [(15)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: (print(varc);closeRfILE(varf))
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: (print(varc);closeRfILE(varf))
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: print(varc)closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: print(varc)closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: closeRfILE(varf)
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: 	(test.in)

Heap: ------------------
][ID:1
ExecutionStack: 
SymbolTable: varc -> (50)   varf -> (test.in)   
Output: [(15), (50)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack:  IF ( (40)==(30) )  THEN ( print((ana)) ) ELSE ( print((ion)) ) 
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print((ion))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: print((ion))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: 
SymbolTable: 
Output: [(ion)]
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(v);print(a)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(v);print(a))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(v);print(a)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(v);print(a)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (new(a, v);(print(v);print(a)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (new(a, v);(print(v);print(a)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: new(a, v)(print(v);print(a))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: new(a, v)(print(v);print(a))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (print(v);print(a))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: (print(v);print(a))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: print(v)print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: print(v)print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: print(a)
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(1, int), (2, Ref(int))]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(print(rH(v));print(rH(rH(a))+(5)))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: Ref(Ref(int)) a(new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (new(a, v);(print(rH(v));print(rH(rH(a))+(5))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: new(a, v)(print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: new(a, v)(print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: (print(rH(v));print(rH(rH(a))+(5)))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: print(rH(v))print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: print(rH(v))print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: print(rH(rH(a))+(5))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: [(20), (25)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: (Ref(int) v;(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) v(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) v(new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(v, (20));(print(rH(v));(wH(v, (30));print(rH(v)+(5)))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(v, (20))(print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(v, (20))(print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (print(rH(v));(wH(v, (30));print(rH(v)+(5))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: print(rH(v))(wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: print(rH(v))(wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (wH(v, (30));print(rH(v)+(5)))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: wH(v, (30))print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: wH(v, (30))print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: print(rH(v)+(5))
SymbolTable: v -> (1, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: v -> (1, int)   
Output: [(20), (35)]
FileTable: 
Heap: 	1 -> (30)
------------------
][ID:1
ExecutionStack: (Ref(int) v;(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a))))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a)))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: Ref(int) v(new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a)))))))
SymbolTable: 
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (new(v, (20));(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a)))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: new(v, (20))(Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a))))))
SymbolTable: v -> (0, int)   
Output: []
FileTable: 
Heap: ------------------
][ID:1
ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (Ref(Ref(int)) a;(new(a, v);(new(v, (30));print(rH(rH(a))))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));print(rH(rH(a)))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: Ref(Ref(int)) a(new(a, v);(new(v, (30));print(rH(rH(a)))))
SymbolTable: v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (new(a, v);(new(v, (30));print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (new(a, v);(new(v, (30));print(rH(rH(a)))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: new(a, v)(new(v, (30));print(rH(rH(a))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: new(a, v)(new(v, (30));print(rH(rH(a))))
SymbolTable: a -> (0, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
------------------
][ID:1
ExecutionStack: (new(v, (30));print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: (new(v, (30));print(rH(rH(a))))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: new(v, (30))print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: new(v, (30))print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (1, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
------------------
][ID:1
ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------
][ID:1
ExecutionStack: print(rH(rH(a)))
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: []
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------
][ID:1
ExecutionStack: 
SymbolTable: a -> (2, Ref(int))   v -> (3, int)   
Output: [(20)]
FileTable: 
Heap: 	1 -> (20)
	2 -> (1, int)
	3 -> (30)
------------------
]